TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 21 files
Detected 7 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: ./src/models/model.py
--------------------------------------------------------------------------------
./src/models/model.py:278:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: ./src/models/layers/standard.py
--------------------------------------------------------------------------------
./src/models/layers/standard.py:15:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./src/models/layers/standard.py:21:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./src/models/layers/standard.py:48:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./src/models/layers/standard.py:50:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: ./src/models/layers/convrnn.py
--------------------------------------------------------------------------------
./src/models/layers/convrnn.py:146:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
./src/models/layers/convrnn.py:154:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: '.'
================================================================================
--------------------------------------------------------------------------------
Processing file './keras_layer.py'
 outputting to './keras_layer.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './data/grocery/prep_grocery.py'
 outputting to './data/grocery/prep_grocery.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 940, in update_string_pasta
    t = pasta.parse(text)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 73
    print trainX.shape
          ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(trainX.shape)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './data/vctk/prep_vctk.py'
 outputting to './data/vctk/prep_vctk.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/run.py'
 outputting to './src/run.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/spline.py'
 outputting to './src/spline.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 940, in update_string_pasta
    t = pasta.parse(text)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 70
    print t + " l2 loss: " + str(avg_sqrt_l2_loss)
          ^
SyntaxError: invalid syntax

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/t-SNE_vis.py'
 outputting to './src/t-SNE_vis.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 940, in update_string_pasta
    t = pasta.parse(text)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 113
    print used_ids
          ^
SyntaxError: Missing parentheses in call to 'print'. Did you mean print(used_ids)?

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/tests.py'
 outputting to './src/tests.py'
--------------------------------------------------------------------------------

ERROR: Failed to parse.
Traceback (most recent call last):
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/tensorflow/tools/compatibility/ast_edits.py", line 940, in update_string_pasta
    t = pasta.parse(text)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/__init__.py", line 23, in parse
    t = ast_utils.parse(src)
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/site-packages/pasta/base/ast_utils.py", line 56, in parse
    tree = ast.parse(sanitize_source(src))
  File "/Users/arielelkin/.pyenv/versions/3.8.6/lib/python3.8/ast.py", line 47, in parse
    return compile(source, filename, mode, flags,
  File "<unknown>", line 20
    stride = str(int(size)/2)
                            ^
TabError: inconsistent use of tabs and spaces in indentation

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/dnn.py'
 outputting to './src/models/dnn.py'
--------------------------------------------------------------------------------

38:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

38:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
42:21: INFO: Added keywords to args of function 'tf.shape'
48:18: INFO: Added keywords to args of function 'tf.shape'
67:18: INFO: Added keywords to args of function 'tf.shape'
70:22: INFO: Added keywords to args of function 'tf.shape'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/spline.py'
 outputting to './src/models/spline.py'
--------------------------------------------------------------------------------

40:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

40:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/audiotfilm.py'
 outputting to './src/models/audiotfilm.py'
--------------------------------------------------------------------------------

36:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

36:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
48:18: INFO: Added keywords to args of function 'tf.shape'
58:18: INFO: Added keywords to args of function 'tf.shape'
66:18: INFO: Added keywords to args of function 'tf.shape'
84:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

84:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
94:76: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
96:75: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
104:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

104:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
119:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

119:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
137:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

137:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/io.py'
 outputting to './src/models/io.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/model2.py'
 outputting to './src/models/model2.py'
--------------------------------------------------------------------------------

27:18: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
28:16: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
28:34: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
65:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

65:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
69:34: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
71:11: INFO: Renamed 'tf.variables_initializer' to 'tf.compat.v1.variables_initializer'
80:24: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
80:42: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
86:18: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
227:20: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/__init__.py'
 outputting to './src/models/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/model.py'
 outputting to './src/models/model.py'
--------------------------------------------------------------------------------

26:16: INFO: Renamed 'tf.GPUOptions' to 'tf.compat.v1.GPUOptions'
27:14: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
27:32: INFO: Renamed 'tf.ConfigProto' to 'tf.compat.v1.ConfigProto'
38:7: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
39:7: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
40:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
43:3: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
44:3: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
45:3: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
49:3: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
51:10: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
56:3: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
94:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

94:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
98:32: INFO: Renamed 'tf.global_variables' to 'tf.compat.v1.global_variables'
101:9: INFO: Renamed 'tf.initialize_all_variables' to 'tf.compat.v1.initialize_all_variables'
114:25: INFO: Added keywords to args of function 'tf.reduce_mean'
115:25: INFO: Added keywords to args of function 'tf.reduce_mean'
116:13: INFO: Renamed 'tf.log' to 'tf.math.log'
116:58: INFO: Renamed 'tf.log' to 'tf.math.log'
118:21: INFO: Added keywords to args of function 'tf.reduce_mean'
119:12: INFO: Added keywords to args of function 'tf.reduce_mean'
122:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
122:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
123:2: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
123:2: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
126:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
127:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
132:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
133:2: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
138:22: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
138:40: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
144:15: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
175:15: INFO: Renamed 'tf.train.import_meta_graph' to 'tf.compat.v1.train.import_meta_graph'
176:6: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
182:16: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
186:21: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
192:18: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
209:5: INFO: Renamed 'tf.gfile.Exists' to 'tf.io.gfile.exists'
209:35: INFO: Renamed 'tf.gfile.DeleteRecursively' to 'tf.io.gfile.rmtree'
210:2: INFO: Renamed 'tf.gfile.MakeDirs' to 'tf.io.gfile.makedirs'
216:15: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
219:12: INFO: tf.summary.merge_all requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
219:12: INFO: Renamed 'tf.summary.merge_all' to 'tf.compat.v1.summary.merge_all'
220:19: INFO: tf.summary.FileWriter requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
220:19: INFO: Renamed 'tf.summary.FileWriter' to 'tf.compat.v1.summary.FileWriter'
264:25: INFO: Renamed 'tf.Summary' to 'tf.compat.v1.Summary'
278:4: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
325:6: INFO: Renamed 'tf.get_default_graph' to 'tf.compat.v1.get_default_graph'
336:26: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
337:19: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
384:18: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/dataset.py'
 outputting to './src/models/dataset.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/audiounet.py'
 outputting to './src/models/audiounet.py'
--------------------------------------------------------------------------------

34:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

34:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
46:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

46:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
56:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

56:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
65:13: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

65:13: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
78:11: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

78:11: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/layers/standard.py'
 outputting to './src/models/layers/standard.py'
--------------------------------------------------------------------------------

12:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
14:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

14:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
15:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
15:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
16:38: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
16:38: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
20:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

20:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
21:10: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
21:10: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
21:56: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
21:56: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
25:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

25:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
26:10: INFO: Added keywords to args of function 'tf.nn.conv1d'
26:10: INFO: Renamed keyword argument for tf.nn.conv1d from value to input
28:6: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
28:6: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
40:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
40:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
46:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
48:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
48:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
49:36: INFO: tf.random_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
49:36: INFO: Renamed 'tf.random_normal_initializer' to 'tf.compat.v1.random_normal_initializer'
50:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
50:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
50:51: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
50:51: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/layers/__init__.py'
 outputting to './src/models/layers/__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/layers/subpixel.py'
 outputting to './src/models/layers/subpixel.py'
--------------------------------------------------------------------------------

11:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

11:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
13:12: INFO: Added keywords to args of function 'tf.shape'
18:24: INFO: Renamed keyword argument for tf.squeeze from squeeze_dims to axis
29:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

29:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
30:8: INFO: Added keywords to args of function 'tf.transpose'
31:8: INFO: Renamed 'tf.batch_to_space_nd' to 'tf.batch_to_space'
32:8: INFO: Added keywords to args of function 'tf.transpose'
43:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

43:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
47:8: INFO: Added keywords to args of function 'tf.transpose'
48:8: INFO: Renamed 'tf.batch_to_space_nd' to 'tf.batch_to_space'
49:8: INFO: Added keywords to args of function 'tf.transpose'
56:7: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
58:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
71:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/layers/convrnn.py'
 outputting to './src/models/layers/convrnn.py'
--------------------------------------------------------------------------------

96:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
145:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
146:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
146:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
149:12: INFO: Added keywords to args of function 'tf.nn.conv2d'
149:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
151:12: INFO: Added keywords to args of function 'tf.nn.conv2d'
151:12: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
154:16: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
154:16: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
157:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
157:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file './src/models/layers/summarization.py'
 outputting to './src/models/layers/summarization.py'
--------------------------------------------------------------------------------

7:7: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

7:7: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
8:11: INFO: Added keywords to args of function 'tf.reduce_mean'
9:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
9:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
10:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

10:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
11:23: INFO: Added keywords to args of function 'tf.reduce_mean'
12:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
12:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
13:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
13:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
13:29: INFO: Added keywords to args of function 'tf.reduce_max'
14:4: INFO: tf.summary.scalar requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
14:4: INFO: Renamed 'tf.summary.scalar' to 'tf.compat.v1.summary.scalar'
14:29: INFO: Added keywords to args of function 'tf.reduce_min'
15:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
15:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
--------------------------------------------------------------------------------

